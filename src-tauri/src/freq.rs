use std::collections::HashMap;

const Ab: [f32; 8] = [25.956543, 51.913086, 103.82617, 207.65234, 415.3047, 830.6094, 1661.2188, 3322.4375];
const A: [f32; 8] = [27.5, 55.0, 110.0, 220.0, 440.0, 880.0, 1760.0, 3520.0];
const As: [f32; 8] = [29.135237, 58.270473, 116.54095, 233.0819, 466.1638, 932.3276, 1864.6552, 3729.3103];
const Bb: [f32; 8] = [29.135237, 58.270473, 116.54095, 233.0819, 466.1638, 932.3276, 1864.6552, 3729.3103];
const B: [f32; 8] = [30.86771, 61.73542, 123.47084, 246.94168, 493.88336, 987.7667, 1975.5334, 3951.067];
const C: [f32; 8] = [32.7032, 65.4064, 130.8128, 261.6256, 523.2512, 1046.5024, 2093.005, 4186.01];
const Cs: [f32; 8] = [34.647835, 69.29567, 138.59134, 277.18268, 554.36536, 1108.7307, 2217.4614, 4434.923];
const Db: [f32; 8] = [34.647835, 69.29567, 138.59134, 277.18268, 554.36536, 1108.7307, 2217.4614, 4434.923];
const D: [f32; 8] = [36.708103, 73.41621, 146.83241, 293.66483, 587.32965, 1174.6593, 2349.3186, 4698.637];
const Ds: [f32; 8] = [38.890884, 77.78177, 155.56354, 311.12708, 622.25415, 1244.5083, 2489.0166, 4978.033];
const Eb: [f32; 8] = [38.890884, 77.78177, 155.56354, 311.12708, 622.25415, 1244.5083, 2489.0166, 4978.033];
const E: [f32; 8] = [41.203457, 82.40691, 164.81383, 329.62766, 659.2553, 1318.5106, 2637.0212, 5274.0425];
const F: [f32; 8] = [43.65355, 87.3071, 174.6142, 349.2284, 698.4568, 1396.9136, 2793.8271, 5587.6543];
const Fs: [f32; 8] = [46.249325, 92.49865, 184.9973, 369.9946, 739.9892, 1479.9784, 2959.9568, 5919.9136];
const Gb: [f32; 8] = [46.249325, 92.49865, 184.9973, 369.9946, 739.9892, 1479.9784, 2959.9568, 5919.9136];
const G: [f32; 8] = [48.999454, 97.99891, 195.99782, 391.99564, 783.9913, 1567.9825, 3135.965, 6271.93];
const Gs: [f32; 8] = [51.91312, 103.82624, 207.65248, 415.30496, 830.6099, 1661.2198, 3322.4397, 6644.8794];


const RATIO: f32 = 1.059463094;

pub fn freq(pitch_name: &str, offset: usize) -> f32 {
    match pitch_name {
        "a" => A[offset],
        "a#" => A[offset] * RATIO,
        "Bb" => A[offset] * RATIO,
        "B" => A[offset] * RATIO.powi(2),
        "C" => A[offset] * RATIO.powi(3),
        "C#" => A[offset] * RATIO.powi(4),
        "Db" => A[offset] * RATIO.powi(4),
        "D" => A[offset] * RATIO.powi(5),
        "D#" => A[offset] * RATIO.powi(6),
        "Eb" => A[offset] * RATIO.powi(6),
        "E" => A[offset] * RATIO.powi(7),
        "F" => A[offset] * RATIO.powi(8),
        "F#" => A[offset] * RATIO.powi(9),
        "Gb" => A[offset] * RATIO.powi(9),
        "G" => A[offset] * RATIO.powi(10),
        "G#" => A[offset] * RATIO.powi(11),
        "Ab" => A[offset] / RATIO,
        &_ => A[4]
    }
}
